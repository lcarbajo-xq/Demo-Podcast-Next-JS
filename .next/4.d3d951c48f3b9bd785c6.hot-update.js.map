{"version":3,"file":"4.d3d951c48f3b9bd785c6.hot-update.js","sources":["webpack:///pages/channel.js"],"sourcesContent":["import { Component } from 'react';\r\n\r\nimport Head from 'next/head';\r\nimport { Link } from '../routes';\r\nimport Error from './_error';\r\nimport slug from '../helpers/slug';\r\nimport ChannelGrid from '../src/components/channel-grid';\r\nimport PodcastListWithClick from '../src/components/PodcastListWithClick';\r\nimport PodcastPlayer from '../src/components/podcast-player';\r\n\r\nexport default class extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { openPodcast: null }\r\n    }\r\n\r\n    static async getInitialProps({ query, res }) {\r\n        const idChannel = query.id;\r\n        try { \r\n            const [ requestChannel , requestChild, requestAudio ] = await Promise.all([\r\n                fetch (`https://api.audioboom.com/channels/${ idChannel }`),\r\n                fetch (`https://api.audioboom.com/channels/${ idChannel }/child_channels`),\r\n                fetch (`https://api.audioboom.com/channels/${ idChannel }/audio_clips`)\r\n            ])\r\n\r\n            if (requestChannel.status >= 400) {\r\n                res.statusCode = requestChannel.status;\r\n                return { channel: null , audio_clips: null, channels: null, statusCode:  requestChannel.status};\r\n            }\r\n\r\n            const { body : { channel } } = await requestChannel.json(); \r\n            const { body : { audio_clips } } = await requestAudio.json();\r\n            const { body : { channels } } = await requestChild.json();\r\n\r\n            return { channel , audio_clips, channels, statusCode: 200 };\r\n        } catch(e) {\r\n            res.statusCode = 503;\r\n            return { channel: null , audio_clips: null, channels: null, statusCode: 503 };\r\n        }\r\n    }\r\n\r\n    openPodcast = (event, infoPodcast) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            openPodcast: infoPodcast,\r\n        })\r\n    }\r\n\r\n    closePodcast = () => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            openPodcast: null,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { channel, audio_clips, channels, statusCode } = this.props\r\n        const { openPodcast } = this.state\r\n\r\n        if (statusCode !== 200 ) {\r\n            return <Error statusCode={ statusCode }/>\r\n        }\r\n        return (\r\n\r\n            <div>\r\n                <Head> \r\n                    <title>{ `${channel.title} | Channel` }</title> \r\n                </Head>\r\n                <header>{ channel.title }</header>\r\n                <h1>{ channel.title }</h1>\r\n\r\n                 <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\r\n                { openPodcast && <div className=\"modal\">\r\n                                    <PodcastPlayer \r\n                                        clip={ openPodcast }\r\n                                        onClose= {this.closePodcast }\r\n                                    />\r\n                                </div>}\r\n                {/* <Layout title={ `${channel.title} | Channel` }>\r\n                    <ChannelGrid channels={ audio_clips } />\r\n                </Layout> */}\r\n                {/* { audio_clips.map( (clip) => (\r\n                    <Link route='podcast' params={{ slugChannel: slug(channel.title), idChannel: channel.id, slug: slug(clip.title), id: clip.id }} >\r\n                        <div className=\"clip\">\r\n                            <h2> { clip.title } </h2>\r\n                        </div>\r\n                    </Link>\r\n                )) } */}\r\n                { channels.length > 0 && \r\n                    <div>\r\n                        <header> {`${ channel.title } > Series `} </header>\r\n                        <ChannelGrid channels={ channels } />\r\n                    {/* // <Link route='channel' params={{ slug: slug(channel.title), id: channel.id }} >\r\n                    //     <a className=\"channel\">\r\n                    //         <img src={ channel.urls.logo_image.original } alt=\"cover\"/>\r\n                    //         <h2> { channel.title } </h2>\r\n                    //     </a>\r\n                    // </Link> */}\r\n                    </div>\r\n                }\r\n                <h2>Ãšltimos Podcasts</h2>\r\n                <PodcastListWithClick \r\n                    podcasts={ audio_clips }\r\n                    onClickPodcast={ this.openPodcast }\r\n                    />\r\n                <style jsx>{`\r\n                    header {\r\n                        color: #fff;\r\n                        background: #55E6C1;\r\n                        padding: 15px;\r\n                        text-align: center;\r\n                        font-weight: bold;\r\n                    }\r\n                    .banner {\r\n                        width: 100%;\r\n                        padding-bottom: 25%;\r\n                        background-position: 50% 50%;\r\n                        background-size: cover;\r\n                        background-color: #aaa;\r\n                    }\r\n                    .channels {\r\n                        display: grid;\r\n                        grid-gap: 15px;\r\n                        padding: 15px;\r\n                        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n                    }\r\n                    .channel img {\r\n                        border-radius: 3px;\r\n                        box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n                        width: 100%;\r\n                    }\r\n                    h1 {\r\n                        padding: 15px;\r\n                        font-weight: 600;\r\n                    }\r\n                    h2 {\r\n                        padding: 5px;\r\n                        font-size: 0.9em;\r\n                        font-weight: 600;\r\n                        margin: 0;\r\n                        text-align: absolute;\r\n                    }\r\n                    .modal {\r\n                        position: fixed;\r\n                        top: 0;\r\n                        bottom: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        z-index: 99999;\r\n                    }\r\n                `}</style>\r\n                <style jsx global>{`\r\n                    body {\r\n                        margin: 0;\r\n                        background: white;\r\n                        font-family: system-ui;\r\n                    }\r\n                `}</style>\r\n             </div> \r\n        )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/channel.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA+BA;AACA;AAAA;AACA;AADA;AAGA;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA;AACA;AAAA;AACA;AADA;AAGA;AA1CA;AAEA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgGA;;;;;;;;;;;;;AAjJA;AACA;;;AAEA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;;AADA;;AACA;AACA;;;AADA;;AACA;AACA;;;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AA7BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}